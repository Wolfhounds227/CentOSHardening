#!/bin/bash
 
PATH=$"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
source /etc/environment && export PATH
 
# Changes root and admin password
echo "StrongRootPassword" | passwd --stdin root
echo "StrongSplunkPassword" | passwd --stdin splunk
 
# Logs baseline information about the server before configuration.
mkdir /root/initial/
top -n 1 -b> /root/initial/top.log
ps aux > /root/initial/ps.log
netstat -nap > /root/initial/netstat.log
uptime > /root/initial/uptime.log
free -h > /root/initial/freemem.log
df -h > /root/initial/drivespace-beforebackup.log
iptables -L > /root/initial/iptables.log
 
# Backup the /etc and /var directories.
mkdir /root/backup/
cp -r /etc/ /root/backup/
 
# Logs the size of the machine now that the drive backup has been done (since this will obviously increase the size of the drive).
df -h > /root/initial/drivespace-afterBackup.log
 
 
# Disable IPv6
sysctl -w net.ipv6.conf.all.disable_ipv6=1
sysctl -w net.ipv6.conf.default.disable_ipv6=1
 
 
#### Setup Firewall rules ####
# Clear all existing rules
iptables -F
 
# Set default action to drop packets
iptables -P FORWARD DROP
iptables -P OUTPUT DROP
iptables -P INPUT DROP
 
# Create table for blacklist
iptables -N BLACKLIST
iptables -A BLACKLIST -m recent --remove
iptables -A BLACKLIST -m recent --name blacklist --set
iptables -A BLACKLIST -j LOG --log-prefix "Blacklist Blocked: "
 
#####SETUP INBOUND RULES ######
# Allow local traffic
iptables -A INPUT -i lo -j ACCEPT
 
# Allow all traffic already established
iptables -A INPUT -m state --state established,related -j ACCEPT
 
# Allow HTTPS traffic
iptables -A INPUT -p tcp --dport 443 -m state --state new -j ACCEPT
 
# Allow Splunk services
iptables -A INPUT -p tcp --dport 8089 -m state --state new -j ACCEPT
iptables -A INPUT -p tcp --dport 8000 -m state --state new -j ACCEPT

# Allow Splunk rsyslog ingestion
iptables -A INPUT -p udp --dport 5013 -m state --state new -j ACCEPT
iptables -A INPUT -p udp --dport 5014 -m state --state new -j ACCEPT
iptables -A INPUT -p udp --dport 5015 -m state --state new -j ACCEPT

# Allow Mongo
iptables -A INPUT -p tcp --dport 8191 -m state --state new -j ACCEPT
 
# Allow python
iptables -A INPUT -p tcp --dport 8065 -m state --state new -j ACCEPT
 
# Allow dhclient
iptables -A INPUT -p udp --dport 68 -m state --state new -j ACCEPT
 
# Allow ssh
iptables -A INPUT -p tcp --dport 22 -m state --state new -j ACCEPT
 
# Allow ping with limits
iptables -A INPUT -p icmp -m limit --limit 3/sec -j ACCEPT
 
# Flag excessive pings as flood attack
iptables -A INPUT -p icmp -m limit --limit 1/minute -j LOG --log-prefix "ICMP Flood: "
 
# Prevent SYN packet attacks
iptables -A INPUT -p tcp ! --syn -m state --state NEW -m limit --limit 1/min -j LOG --log-prefix "SYN packet flood: "
iptables -A INPUT -p tcp ! --syn -m state --state NEW -j DROP
 
# Prevent fragmented packets
iptables -A INPUT -f -m limit --limit 1/min -j LOG --log-prefix "Fragmented packet: "
iptables -A INPUT -f -j DROP
 
# Prevent XMAS attacks
iptables -A INPUT -p tcp --tcp-flags ALL ALL -m limit --limit 1/min -j LOG --log-prefix "XMAS packet: "
iptables -A INPUT -p tcp --tcp-flags ALL ALL -j DROP
 
# Prevent NULL attacks
iptables -A INPUT -p tcp --tcp-flags ALL NONE -m limit --limit 1/min -j LOG --log-prefix "NULL packet: "
iptables -A INPUT -p tcp --tcp-flags ALL NONE -j DROP
 
# Drop packets from blacklisted IP for 10 minutes
iptables -A INPUT -m recent --rcheck --name blacklist --seconds 600 -j DROP
 
# Remember all IP connections and send excessive requests to blacklist
iptables -A INPUT -m state --state NEW -m recent --set
iptables -A INPUT ! -s 172.20.240.0/22 -m recent --update --seconds 10 --hitcount 20 -j BLACKLIST
 
 
 
### LOCALHOST ###
# Allow local traffic
iptables -A OUTPUT -o lo -j ACCEPT
 
 
 
### OUTBOUND BLOCKING ###
# Allow all traffic already established
iptables -A OUTPUT -m state --state established,related -j ACCEPT
   
# Allow ping out (with restrictions)
iptables -A OUTPUT -p icmp -m limit --limit 2/sec -j ACCEPT
 
# Allow HTTP traffic out
iptables -A OUTPUT -p tcp --dport 80 -m state --state new -j ACCEPT
 
# Allow HTTPS traffic out.
iptables -A OUTPUT -p tcp --dport 443 -m state --state new -j ACCEPT
 
# Allow DNS traffic out.
iptables -A OUTPUT -p udp --dport 53 -m state --state new -j ACCEPT
 
# Allow NTP traffic out.
iptables -A OUTPUT -p udp --dport 123 -d 172.20.242.200 -m state --state new -j ACCEPT
 
# Allow rsyslog traffic out to send logs.
iptables -A OUTPUT -p udp --dport 514 -d 172.20.241.20 -m state --state new -j ACCEPT
 
# Allow LDAP traffic.
iptables -A OUTPUT -p tcp --dport 389 -d 172.20.242.200 -j ACCEPT
iptables -A OUTPUT -p udp --dport 389 -d 172.20.242.200 -j ACCEPT
iptables -A OUTPUT -p tcp --dport 636 -d 172.20.242.200 -j ACCEPT
iptables -A OUTPUT -p udp --dport 636 -d 172.20.242.200 -j ACCEPT
 
# Log everything else about to be dropped.
iptables -A OUTPUT -m limit --limit 2/min -j LOG --log-prefix "Output-Dropped: " --log-level 4
iptables -A INPUT -m limit --limit 2/min -j LOG --log-prefix "Input-Dropped: " --log-level 4
iptables -A FORWARD -m limit --limit 2/min -j LOG --log-prefix "Forward-Dropped: " --log-level 4
 
# Saves the IPtables.
iptables-save | sudo tee /etc/sysconfig/iptables
 
 
# Lock the /etc/shadow file.
chmod 0000 /etc/shadow
 
# Stops unnecessary services.
/etc/init.d/atd stop
/etc/init.d/bluetooth stop
/etc/init.d/crond stop
/etc/init.d/cups stop
 
# Removes all cron jobs
rm -rf /var/spool/cron/*
 
 
 
# Sets the NTP server and sets the server to be in the central timezone.
yum -y upgrade ntp
touch /etc/ntp.local
echo "server 172.20.242.200 prefer" > /etc/ntp.local
cp /etc/localtime /root/old.timezone
rm /etc/localtime
ln -s /usr/share/zoneinfo/America/Chicago /etc/localtime
 
# Restarts and starts NTPd service at system startup.
service ntpd restart
 
 
# Enable SELinux (if it's not already enabled)
sudo sed -i -e 's/disabled/enforcing/g' /etc/selinux/config /etc/selinux/config
sudo sed -i -e 's/permissive/enfocing/g' /etc/selinux/config /etc/selinux/config
 
# Installs Fail2Ban.
rpm -Uvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
yum --disablerepo=epel -y update ca-certificates
yum -y install fail2ban
 
# Configure Fail2Ban (uses jail.local to overwrite needed changes).
cp /etc/fail2ban/jail.conf /etc/fail2ban/jail.local
sed -i -e 's/ignoreip = .*$/ignoreip = 172.20.241.20/' /etc/fail2ban/jail.local

# Starts and enables fail2ban.
service fail2ban start
 
# Install ClamAV
yum install clamav

# Switch runlevel to GUI and flip sticky bit on /tmp
sed -i -e 's/id:3:initdefault:/id:5:initdefault:/' /etc/inittab
chown -R root:root /tmp
chmod 1777 /tmp

# Don't allow remote logins on splunk
sed -i -e 's/allowRemoteLogin = .*$/allowRemoteLogin = never/' /opt/splunk/etc/system/local/server.conf

# Removes details as to what the script has done (although this might be unneeded).
history -c
exit
